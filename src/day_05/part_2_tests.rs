use crate::day_05::part_2::solve;

#[test]
fn sample() {
    assert_eq!(solve("47|53
97|13
97|61
97|47
75|29
61|13
75|53
29|13
97|29
53|29
61|53
97|53
61|29
47|13
75|47
97|75
47|61
75|61
47|29
75|13
53|13

75,47,61,53,29
97,61,53,29,13
75,29,13
75,97,47,61,53
61,13,29
97,13,75,29,47"), 123);
}

#[test]
fn simple() {
    assert_eq!(solve("0|1
1|2
2|3
3|4

4,3,2,1,0"), 2)
}

#[test]
fn random() {
    assert_eq!(solve("0|1
1|2
2|3
3|4

1,0,2,3,4"), 2)
}


#[test]
fn multi() {
    assert_eq!(solve("0|1
1|2
2|3
3|4

1,0,2,3,4
4,3,2,1,0
0,4,1,3,2
3,1,4,2,0"), 8)
}

#[test]
fn sample_breakdown() {
    let rules = "47|53
97|13
97|61
97|47
75|29
61|13
75|53
29|13
97|29
53|29
61|53
97|53
61|29
47|13
75|47
97|75
47|61
75|61
47|29
75|13
53|13

".to_string();
    // 75 47 61 53 29 
    assert_eq!(solve(&(rules.clone() + "75,47,61,53,29")), 0);
    // 97 61 53 29 13
    assert_eq!(solve(&(rules.clone() + "97,61,53,29,13")), 0);
    // 75 29 13
    assert_eq!(solve(&(rules.clone() + "75,29,13")), 0);
    // 97 75 47 61 53
    assert_eq!(solve(&(rules.clone() + "75,97,47,61,53")), 47);
    // 61 29 13
    assert_eq!(solve(&(rules.clone() + "61,13,29")), 29);
    // 97 75 47 29 13
    assert_eq!(solve(&(rules.clone() + "97,13,75,29,47")), 47);
}
